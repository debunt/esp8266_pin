using Telegram.Bot.Types;
using Telegram.Bot;

namespace esp8266_pin.Models.Commands
{
    /*Иногда требуется создать базовый класс, в котором определяется лишь 
     *самая общая форма для всех его производных классов, а наполнение ее 
     * деталями предоставляется каждому из этих классов. В таком классе 
     * определяется лишь характер методов, которые должны быть конкретно 
     * реализованы в производных классах, а не в самом базовом классе. 
     * Подобная ситуация возникает, например, в связи с невозможностью 
     * получить содержательную реализацию метода в базовом классе.
     */
     //Еще раз - НЕЛЬЗЯ создать экземпляр абстрактного класса
     //Можно только унаследовать данный класс в другом классе. Типа Шаблона
    public abstract class Command
    {
        public abstract string Name { get; }

        //Метод выполнить. Принимает сообщение с командой, а так же экземпляр 
        //телеграмм бот клиент для того, чтобы можно было отправить ответ обратно
        public abstract void Execute(Message message, TelegramBotClient client);

        /// <summary>
        /// сопоставление команд пользователя с текущей командой
        /// </summary>
        /// <param name="command"></param>
        /// <returns></returns>
        public bool Comparison(string commandbot)
        {
            //команду будем сверять по имени самой команды и имени бота
            //return commandbot.Contains(this.Name) && commandbot.Contains(AppSettings.Name);
            //Возвращает значение, указывающее, содержит ли указанная 
            //строка значение подстроки переданной в качестве параметра.
            return commandbot.Contains(this.Name);
        }
    }
}